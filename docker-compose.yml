name: ecommerce
services:
  nginx: # web server
    container_name: nginx
    build: ./nginx
    ports:
      - "8000:80"
    depends_on:
      - api
    links:
      - api
    networks:
      - app-network
    restart: unless-stopped
  api: # laravel application
    container_name: api
    build: ./api
    environment:
      - APP_ENV=local
      - DB_HOST=db
      - OPENSEARCH_HOST=opensearch
    depends_on:
      - db
      - opensearch
      - redis
    volumes:
      - ./api:/var/www/html
    networks:
      - app-network
    restart: unless-stopped
  app: # next app
    container_name: app
    build: ./app
    environment:
      - API_URL=http://api:8000
    ports:
      - "3000:3000"
    depends_on:
      - nginx
    volumes:
      - ./app:/app
      - /app/node_modules
    networks:
      - app-network
    restart: unless-stopped
  db: # mysql
    container_name: mysql
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=passwd*
      - MYSQL_USER=op_ecommerce
      - MYSQL_PASSWORD=passwd
      - MYSQL_DATABASE=ecommerce
      - MYSQL_TCP_PORT=3308
    ports:
      - "3308:3308"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    restart: always
  opensearch:
    container_name: opensearch
    image: opensearchproject/opensearch:1.3.0
    environment:
      - discovery.type=single-node
    ports:
      - "9202:9200"
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    networks:
      - app-network
    restart: always
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6381:6381"
    command: --port 6381
    volumes:
      - redis_data:/data/redis
    networks:
      - app-network
    restart: always
volumes:
  mysql_data:
  opensearch_data:
  redis_data:
networks:
  app-network:
    driver: bridge